openapi: 3.0.0
info:
  title: Beemo
  version: 1.0.0
servers:
  - url: http://{{traderurl}}
  - url: http://localhost:9005
  - url: http://localhost:9001
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: TraderService
  - name: UserService
  - name: OrderService
paths:
  /products:
    get:
      tags:
        - TraderService
      summary: Get all products
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - TraderService
      summary: Save a product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Hihi Cola
                description: An amazing drink
                price: 19
                stock: 10
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /products/6:
    get:
      tags:
        - TraderService
      summary: Get a product
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /products/1/stock:
    get:
      tags:
        - TraderService
      summary: Checks Available products
      security:
        - noauthAuth: []
      parameters:
        - name: quantity
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /products/5:
    put:
      tags:
        - TraderService
      summary: Update a product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Alex Cola
                description: An amazing drink
                price: 19
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /products/3:
    delete:
      tags:
        - TraderService
      summary: Delete a product
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /1/validate:
    get:
      tags:
        - UserService
      summary: Validate a user
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /register:
    post:
      tags:
        - UserService
      summary: Register a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: testuser
                email: test@example.com
                password: password123
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /login:
    post:
      tags:
        - UserService
      summary: Login as a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: testuser
                password: password123
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /orders/user/1:
    get:
      tags:
        - OrderService
      summary: Gets ordered products for a user
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /orders:
    post:
      tags:
        - OrderService
      summary: Create an order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                userId: 1
                productId: 6
                quantity: 2
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
